{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\DAChuyenNganh\\\\Libraly-System\\\\MERN-libraly-online\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport axios from 'axios';\nimport { ALL_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, CLEAR_ERRORS, CREATE_ORDER_FAIL, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, DELETE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, MY_ORDERS_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, UPDATE_ORDER_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS } from '../actionsTypes';\nvar createOrder = function createOrder(order) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch, getState) {\n      var userInfo, config, _yield$axios$post, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context.prev = 1;\n              dispatch({\n                type: CREATE_ORDER_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context.next = 6;\n              return axios.post(\"/order/new/auth\", order, config);\n            case 6:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: CREATE_ORDER_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: CREATE_ORDER_FAIL,\n                payload: _context.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\n// Get curretly logged in user orders\nvar myOrders = function myOrders() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch, getState) {\n      var userInfo, config, _yield$axios$get, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context2.prev = 1;\n              dispatch({\n                type: MY_ORDERS_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context2.next = 6;\n              return axios.get(\"/order/me\", config);\n            case 6:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: MY_ORDERS_SUCCESS,\n                payload: data.orders\n              });\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: MY_ORDERS_FAIL,\n                payload: _context2.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n// Get curretly logged in user orders\nvar updateOrder = function updateOrder(id, orderData) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch, getState) {\n      var userInfo, config, _yield$axios$put, data;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context3.prev = 1;\n              dispatch({\n                type: UPDATE_ORDER_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context3.next = 6;\n              return axios.put(\"/order/update/\".concat(id), orderData, config);\n            case 6:\n              _yield$axios$put = _context3.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: UPDATE_ORDER_SUCCESS,\n                payload: data.success\n              });\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: UPDATE_ORDER_FAIL,\n                payload: _context3.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n// Get order details\nvar getOrderDetails = function getOrderDetails(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch, getState) {\n      var userInfo, config, _yield$axios$get2, data;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context4.prev = 1;\n              dispatch({\n                type: ORDER_DETAILS_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context4.next = 6;\n              return axios.get(\"/order/auth/\".concat(id), config);\n            case 6:\n              _yield$axios$get2 = _context4.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: ORDER_DETAILS_SUCCESS,\n                payload: data.order\n              });\n              _context4.next = 14;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: ORDER_DETAILS_FAIL,\n                payload: _context4.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 11]]);\n    }));\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\n// Get all orders - ADMIN\nvar allOrders = function allOrders() {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch, getState) {\n      var userInfo, config, _yield$axios$get3, data;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context5.prev = 1;\n              dispatch({\n                type: ALL_ORDERS_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"order/auth\", config);\n            case 6:\n              _yield$axios$get3 = _context5.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: ALL_ORDERS_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: ALL_ORDERS_FAIL,\n                payload: _context5.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 11]]);\n    }));\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n\n// Delete order\nvar deleteOrder = function deleteOrder(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(dispatch, getState) {\n      var userInfo, config, _yield$axios$delete, data;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context6.prev = 1;\n              dispatch({\n                type: DELETE_ORDER_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context6.next = 6;\n              return axios.delete(\"/order/delete/\".concat(id), config);\n            case 6:\n              _yield$axios$delete = _context6.sent;\n              data = _yield$axios$delete.data;\n              dispatch({\n                type: DELETE_ORDER_SUCCESS,\n                payload: data.success\n              });\n              _context6.next = 14;\n              break;\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](1);\n              dispatch({\n                type: DELETE_ORDER_FAIL,\n                payload: _context6.t0.response.data.message\n              });\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 11]]);\n    }));\n    return function (_x11, _x12) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\n// Clear Errors\nexport var clearErrors = function clearErrors() {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch({\n                type: CLEAR_ERRORS\n              });\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return function (_x13) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport { createOrder, myOrders, getOrderDetails, allOrders, updateOrder, deleteOrder };","map":{"version":3,"names":["axios","ALL_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","CLEAR_ERRORS","CREATE_ORDER_FAIL","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","DELETE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","MY_ORDERS_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","createOrder","order","dispatch","getState","userInfo","userLogin","type","config","headers","authorization","token","post","data","payload","response","message","myOrders","get","orders","updateOrder","id","orderData","put","success","getOrderDetails","allOrders","loading","deleteOrder","delete","clearErrors"],"sources":["D:/DAChuyenNganh/Libraly-System/MERN-libraly-online/Frontend/src/redux/actions/order/orderAction.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ALL_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, CLEAR_ERRORS, CREATE_ORDER_FAIL, CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, DELETE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, MY_ORDERS_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, UPDATE_ORDER_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS } from '../actionsTypes';\r\n\r\n\r\nconst createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post(\"/order/new/auth\", order, config);\r\n\r\n            dispatch({\r\n                type: CREATE_ORDER_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: CREATE_ORDER_FAIL,\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// Get curretly logged in user orders\r\nconst myOrders = () => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({ type: MY_ORDERS_REQUEST });\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.get(\"/order/me\", config);\r\n\r\n            dispatch({\r\n                type: MY_ORDERS_SUCCESS,\r\n                payload: data.orders,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: MY_ORDERS_FAIL,\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n// Get curretly logged in user orders\r\nconst updateOrder = (id, orderData) => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({ type: UPDATE_ORDER_REQUEST });\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.put(`/order/update/${id}`, orderData, config);\r\n\r\n            dispatch({\r\n                type: UPDATE_ORDER_SUCCESS,\r\n                payload: data.success,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: UPDATE_ORDER_FAIL,\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n// Get order details\r\nconst getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({ type: ORDER_DETAILS_REQUEST });\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.get(`/order/auth/${id}`, config);\r\n\r\n            dispatch({\r\n                type: ORDER_DETAILS_SUCCESS,\r\n                payload: data.order,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ORDER_DETAILS_FAIL,\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// Get all orders - ADMIN\r\nconst allOrders = () => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({\r\n                type: ALL_ORDERS_REQUEST,\r\n                loading: true,\r\n            });\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n            const { data } = await axios.get(\"order/auth\", config);\r\n\r\n            dispatch({\r\n                type: ALL_ORDERS_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ALL_ORDERS_FAIL,\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// Delete order\r\nconst deleteOrder = (id) =>{\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n          dispatch({ type: DELETE_ORDER_REQUEST });\r\n          const config = {\r\n            headers: {\r\n                authorization: `tiendat ${userInfo.token}`,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n      \r\n          const { data } = await axios.delete(`/order/delete/${id}`, config);\r\n      \r\n          dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success,\r\n          });\r\n        } catch (error) {\r\n          dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message,\r\n          });\r\n        }\r\n      }\r\n} \r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS,\r\n    });\r\n};\r\n\r\nexport { createOrder, myOrders, getOrderDetails, allOrders, updateOrder, deleteOrder };"],"mappings":"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"},"metadata":{},"sourceType":"module"}