{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_AUTHOR_FAIL, FETCH_AUTHOR_REQUEST, FETCH_AUTHOR_SUCCESS } from '../actionsTypes';\nconst fetchAuthors = () => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    const {\n      userInfo\n    } = getState().userLogin;\n    try {\n      dispatch({\n        type: FETCH_AUTHOR_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get('/author', config);\n      dispatch({\n        type: FETCH_AUTHOR_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_AUTHOR_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport { fetchAuthors };","map":{"version":3,"names":["axios","FETCH_AUTHOR_FAIL","FETCH_AUTHOR_REQUEST","FETCH_AUTHOR_SUCCESS","fetchAuthors","dispatch","getState","userInfo","userLogin","type","loading","config","headers","authorization","token","data","get","payload","error","response","message"],"sources":["D:/DAChuyenNganh/Libraly-System/MERN-libraly-online/Frontend/src/redux/actions/author/authorActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { FETCH_AUTHOR_FAIL, FETCH_AUTHOR_REQUEST, FETCH_AUTHOR_SUCCESS } from '../actionsTypes';\r\n\r\n\r\nconst fetchAuthors = () => {\r\n    return async (dispatch, getState) => {\r\n      // grab the user Token from store\r\n      const { userInfo } = getState().userLogin;\r\n      try {\r\n        dispatch({\r\n          type: FETCH_AUTHOR_REQUEST,\r\n          loading: true,\r\n        });\r\n        const config = {\r\n          headers: {\r\n            authorization: `tiendat ${userInfo.token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        };\r\n        const { data } = await axios.get('/author', config);\r\n  \r\n        dispatch({\r\n          type: FETCH_AUTHOR_SUCCESS,\r\n          payload: data,\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: FETCH_AUTHOR_FAIL,\r\n          error: error.response && error.response.data.message,\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\nexport {fetchAuthors};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,iBAAiB;AAG/F,MAAMC,YAAY,GAAG,MAAM;EACvB,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC;IACA,MAAM;MAAEC;IAAS,CAAC,GAAGD,QAAQ,EAAE,CAACE,SAAS;IACzC,IAAI;MACFH,QAAQ,CAAC;QACPI,IAAI,EAAEP,oBAAoB;QAC1BQ,OAAO,EAAE;MACX,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,WAAUN,QAAQ,CAACO,KAAM,EAAC;UAC1C,cAAc,EAAE;QAClB;MACF,CAAC;MACD,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,SAAS,EAAEL,MAAM,CAAC;MAEnDN,QAAQ,CAAC;QACPI,IAAI,EAAEN,oBAAoB;QAC1Bc,OAAO,EAAEF;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdb,QAAQ,CAAC;QACPI,IAAI,EAAER,iBAAiB;QACvBiB,KAAK,EAAEA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MAC/C,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC;AAEH,SAAQhB,YAAY"},"metadata":{},"sourceType":"module"}