{"ast":null,"code":"var _jsxFileName = \"D:\\\\DAChuyenNganh\\\\Libraly-System\\\\MERN-libraly-online\\\\Frontend\\\\src\\\\components\\\\routeAuth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    isAdmin,\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    userInfo\n  } = useSelector(state => state.userLogin);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      render: props => {\n        if (userInfo && userInfo.permission !== 'user') {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 36\n          }, this);\n        }\n        if (userInfo && userInfo.permission !== 'admin') {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(ProtectedRoute, \"qUReD1qMBMslkm5oPJj5ah2tU1U=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Fragment","Route","Redirect","useSelector","ProtectedRoute","isAdmin","component","Component","rest","userInfo","state","userLogin","loading","props","permission"],"sources":["D:/DAChuyenNganh/Libraly-System/MERN-libraly-online/Frontend/src/components/routeAuth/ProtectedRoute.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n\n    const {userInfo } = useSelector(state => state.userLogin)\n\n    return (\n        <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (userInfo && userInfo.permission !== 'user') {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (userInfo && userInfo.permission !== 'admin') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,aAAa;AAAA;AAEzC,MAAMC,cAAc,GAAG,QAAgD;EAAA;EAAA,IAA/C;IAAEC,OAAO;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC;EAE9D,MAAM;IAACC;EAAS,CAAC,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EAEzD,oBACI,QAAC,QAAQ;IAAA,UACJC,OAAO,KAAK,KAAK,iBACd,QAAC,KAAK;MAAA,GACEJ,IAAI;MACR,MAAM,EAAEK,KAAK,IAAI;QACb,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,UAAU,KAAK,MAAM,EAAE;UAC5C,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAG;QACnC;QAEA,IAAIL,QAAQ,IAAIA,QAAQ,CAACK,UAAU,KAAK,OAAO,EAAE;UAC7C,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAC;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAC9B;QAEA,oBAAO,QAAC,SAAS;UAAA,GAAKD;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI;MACnC;IAAE;MAAA;MAAA;MAAA;IAAA;EAET;IAAA;IAAA;IAAA;EAAA,QACM;AAEnB,CAAC;AAAA,GAxBKT,cAAc;EAAA,QAEID,WAAW;AAAA;AAAA,KAF7BC,cAAc;AA0BpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}