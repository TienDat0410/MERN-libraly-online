{"ast":null,"code":"import axios from 'axios';\nconst {\n  CREATE_BOOK_REQUEST,\n  CREATE_BOOK_SUCCESS,\n  CREATE_BOOK_FAIL,\n  FETCH_BOOK_REQUEST,\n  FETCH_BOOK_SUCCESS,\n  FETCH_BOOK_FAIL,\n  DELETE_BOOK_REQUEST,\n  DELETE_BOOK_SUCCESS,\n  DELETE_BOOK_FAIL,\n  BOOK_UPDATE_REQUEST,\n  BOOK_UPDATE_SUCCESS,\n  BOOK_UPDATE_FAIL,\n  BOOK_DETAIL_REQUEST,\n  BOOK_DETAIL_SUCCESS,\n  BOOK_DETAIL_FAIL,\n  CLEAR_ERRORS\n} = require(\"../actionsTypes\");\nconst createBookAction = bookData => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    const {\n      userInfo\n    } = getState().userLogin;\n    try {\n      dispatch({\n        type: CREATE_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      // headers: {\n      //     \"Content-Type\": \"multipart/form-data\"\n      // }\n\n      const {\n        data\n      } = await axios.post('/book/auth', bookData, config);\n      dispatch({\n        type: CREATE_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_BOOK_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\n//Fetch all books\n\nconst fetchBooks = () => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    const {\n      userInfo\n    } = getState().userLogin;\n    try {\n      dispatch({\n        type: FETCH_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get('/book', config);\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOK_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\n// delete book\nconst deleteBook = id => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    const {\n      userInfo\n    } = getState().userLogin;\n    try {\n      dispatch({\n        type: DELETE_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`/book/auth/${id}`, config);\n      dispatch({\n        type: DELETE_BOOK_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: FETCH_BOOK_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_BOOK_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\n\n//Fetch a signle book\nconst fetchBook = id => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    // const { userInfo } = getState().userLogin;\n    try {\n      dispatch({\n        type: BOOK_DETAIL_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          // authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/book/auth/${id}`, config);\n      dispatch({\n        type: BOOK_DETAIL_SUCCESS,\n        payload: data.book\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_DETAIL_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\n\n//UPDATE BOOK\n\nconst updateBook = (id, bookData) => {\n  return async (dispatch, getState) => {\n    // grab the user Token from store\n    const {\n      userInfo\n    } = getState().userLogin;\n    try {\n      dispatch({\n        type: BOOK_UPDATE_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          authorization: `tiendat ${userInfo.token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/book/auth/${id}`, bookData, config);\n      dispatch({\n        type: BOOK_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_UPDATE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\nconst clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\nexport { createBookAction, fetchBooks, deleteBook, updateBook, fetchBook, clearErrors };","map":{"version":3,"names":["axios","CREATE_BOOK_REQUEST","CREATE_BOOK_SUCCESS","CREATE_BOOK_FAIL","FETCH_BOOK_REQUEST","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAIL","DELETE_BOOK_REQUEST","DELETE_BOOK_SUCCESS","DELETE_BOOK_FAIL","BOOK_UPDATE_REQUEST","BOOK_UPDATE_SUCCESS","BOOK_UPDATE_FAIL","BOOK_DETAIL_REQUEST","BOOK_DETAIL_SUCCESS","BOOK_DETAIL_FAIL","CLEAR_ERRORS","require","createBookAction","bookData","dispatch","getState","userInfo","userLogin","type","loading","config","headers","authorization","token","data","post","payload","error","response","message","fetchBooks","get","deleteBook","id","delete","fetchBook","book","updateBook","put","clearErrors"],"sources":["D:/DAChuyenNganh/Libraly-System/MERN-libraly-online/Frontend/src/redux/actions/books/bookActions.js"],"sourcesContent":["import axios from 'axios';\r\nconst { CREATE_BOOK_REQUEST, CREATE_BOOK_SUCCESS, CREATE_BOOK_FAIL, FETCH_BOOK_REQUEST, FETCH_BOOK_SUCCESS, FETCH_BOOK_FAIL, DELETE_BOOK_REQUEST, DELETE_BOOK_SUCCESS, DELETE_BOOK_FAIL, BOOK_UPDATE_REQUEST, BOOK_UPDATE_SUCCESS, BOOK_UPDATE_FAIL, BOOK_DETAIL_REQUEST, BOOK_DETAIL_SUCCESS, BOOK_DETAIL_FAIL, CLEAR_ERRORS } = require(\"../actionsTypes\");\r\n\r\nconst createBookAction = bookData => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: CREATE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        }\r\n      };\r\n      // headers: {\r\n      //     \"Content-Type\": \"multipart/form-data\"\r\n      // }\r\n\r\n      const { data } = await axios.post('/book/auth', bookData, config);\r\n\r\n      dispatch({\r\n        type: CREATE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n//Fetch all books\r\n\r\nconst fetchBooks = () => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: FETCH_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const { data } = await axios.get('/book', config);\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n// delete book\r\nconst deleteBook = id => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: DELETE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.delete(`/book/auth/${id}`, config);\r\n      dispatch({\r\n        type: DELETE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_BOOK_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//Fetch a signle book\r\nconst fetchBook = (id) => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    // const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: BOOK_DETAIL_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          // authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/book/auth/${id}`, config);\r\n\r\n      dispatch({\r\n        type: BOOK_DETAIL_SUCCESS,\r\n        payload: data.book,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_DETAIL_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//UPDATE BOOK\r\n\r\nconst updateBook = (id, bookData) => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: BOOK_UPDATE_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.put(`/book/auth/${id}`, bookData, config);\r\n      dispatch({\r\n        type: BOOK_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_UPDATE_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst clearErrors = () => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: CLEAR_ERRORS,\r\n\t});\r\n};\r\n\r\n\r\nexport { createBookAction, fetchBooks, deleteBook, updateBook, fetchBook, clearErrors };"],"mappings":"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"},"metadata":{},"sourceType":"module"}