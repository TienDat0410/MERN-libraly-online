{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\DAChuyenNganh\\\\Libraly-System\\\\Libraly-System\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../actionsTypes\";\nimport axios from \"axios\";\n\nvar registerUserAction = function registerUserAction(username, password, email, permission) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post('/user/register', {\n                username: username,\n                password: password,\n                email: email,\n                permission: permission\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              console.log(username, password, email, permission);\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              }); //Save the user into localstorage\n\n              localStorage.setItem('userAuthData', JSON.stringify(data));\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('mongdb error', _context.t0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; //Login action\n\n\nvar loginUserAction = function loginUserAction(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              }); //Make the actual\n\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 5;\n              return axios.post('/user/login', {\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              }); //Save the user into localstorage\n\n              localStorage.setItem('userAuthData', JSON.stringify(data));\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context2.t0.response.data.message // payload: error.response && error.response.data.message,\n\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; //Logout action\n\n\nvar logoutUserAction = function logoutUserAction() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              try {\n                //Remove user from storage\n                localStorage.removeItem('userAuthData');\n                dispatch({\n                  type: USER_LOGOUT_SUCCESS\n                });\n              } catch (error) {}\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; //profile action\n\n\nvar getUserProfileAction = function getUserProfileAction() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch, getState) {\n      var userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context4.prev = 1;\n              dispatch({\n                type: USER_PROFILE_REQUEST\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token)\n                }\n              }; //make request\n\n              _context4.next = 6;\n              return axios.get('/user/profile', config);\n\n            case 6:\n              _yield$axios$get = _context4.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: USER_PROFILE_SUCCESS,\n                payload: data\n              });\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: USER_PROFILE_FAIL,\n                payload: _context4.t0.response && _context4.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 11]]);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nvar updateUser = function updateUser(username, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch, getState) {\n      var userInfo, config, _yield$axios$put, data;\n\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: USER_UPDATE_REQUEST,\n                loading: true\n              }); // Get the token of the user from store because that's what our endpoint need\n\n              userInfo = getState().userLogin.userInfo;\n              console.log(userInfo.token); //Create a config and pass to axios for authentication\n\n              config = {\n                headers: {\n                  'Content-Type': 'application/json',\n                  authorization: \"tiendat \".concat(userInfo.token)\n                }\n              };\n              _context5.next = 7;\n              return axios.put('/user/auth/update', {\n                username: username,\n                email: email,\n                password: password\n              }, config);\n\n            case 7:\n              _yield$axios$put = _context5.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: USER_UPDATE_SUCCESS,\n                payload: data\n              });\n              _context5.next = 15;\n              break;\n\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: USER_UPDATE_FAIL,\n                payload: _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 12]]);\n    }));\n\n    return function (_x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n\nexport { registerUserAction, loginUserAction, logoutUserAction, getUserProfileAction, updateUser };","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","axios","registerUserAction","username","password","email","permission","dispatch","type","config","headers","post","data","console","log","payload","localStorage","setItem","JSON","stringify","response","message","loginUserAction","logoutUserAction","removeItem","error","getUserProfileAction","getState","userInfo","userLogin","authorization","token","get","updateUser","loading","put"],"sources":["D:/DAChuyenNganh/Libraly-System/Libraly-System/Frontend/src/redux/actions/users/userAction.js"],"sourcesContent":["import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../actionsTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst registerUserAction = (username, password, email, permission) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: USER_REGISTER_REQUEST,\r\n            });\r\n\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' },\r\n            };\r\n\r\n            const { data } = await axios.post('/user/register',\r\n                {\r\n                    username,\r\n                    password,\r\n                    email,\r\n                    permission,\r\n                },\r\n                config\r\n            );\r\n            console.log(username, password, email, permission);\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data,\r\n            });\r\n\r\n            //Save the user into localstorage\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        } catch (error) {\r\n            console.log('mongdb error', error);\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n//Login action\r\n\r\nconst loginUserAction = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: USER_LOGIN_REQUEST,\r\n            });\r\n\r\n            //Make the actual\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post('/user/login',\r\n                { email, password },\r\n                config\r\n            );\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data,\r\n            });\r\n            //Save the user into localstorage\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: error.response.data.message,\r\n                // payload: error.response && error.response.data.message,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n//Logout action\r\nconst logoutUserAction = () => async dispatch => {\r\n    try {\r\n        //Remove user from storage\r\n        localStorage.removeItem('userAuthData');\r\n        dispatch({\r\n            type: USER_LOGOUT_SUCCESS,\r\n        });\r\n    } catch (error) { }\r\n};\r\n\r\n//profile action\r\nconst getUserProfileAction = () => {\r\n    return async (dispatch, getState) => {\r\n        // grab the user Token from store\r\n        const { userInfo } = getState().userLogin;\r\n        try {\r\n            dispatch({\r\n                type: USER_PROFILE_REQUEST,\r\n            });\r\n            const config = {\r\n                headers: {\r\n                    authorization: `tiendat ${userInfo.token}`\r\n                }\r\n            }\r\n            //make request\r\n            const { data } = await axios.get('/user/profile', config);\r\n            dispatch({\r\n                type: USER_PROFILE_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_PROFILE_FAIL,\r\n                payload: error.response && error.response.data.message,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst updateUser = (username, email, password) => {\r\n    return async (dispatch, getState) => {\r\n      try {\r\n        dispatch({\r\n          type: USER_UPDATE_REQUEST,\r\n          loading: true,\r\n        });\r\n        // Get the token of the user from store because that's what our endpoint need\r\n        const { userInfo } = getState().userLogin;\r\n        console.log(userInfo.token);\r\n        //Create a config and pass to axios for authentication\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: `tiendat ${userInfo.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.put(\r\n          '/user/auth/update',\r\n          { username, email, password },\r\n          config\r\n        );\r\n        dispatch({\r\n          type: USER_UPDATE_SUCCESS,\r\n          payload: data,\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: USER_UPDATE_FAIL,\r\n          payload:\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message,\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\nexport { registerUserAction, loginUserAction, logoutUserAction, getUserProfileAction, updateUser };"],"mappings":"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"},"metadata":{},"sourceType":"module"}