{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\DAChuyenNganh\\\\Libraly-System\\\\Libraly-System\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport axios from 'axios';\n\nvar _require = require(\"../actionsTypes\"),\n    CREATE_BOOK_REQUEST = _require.CREATE_BOOK_REQUEST,\n    CREATE_BOOK_SUCCESS = _require.CREATE_BOOK_SUCCESS,\n    CREATE_BOOK_FAIL = _require.CREATE_BOOK_FAIL,\n    FETCH_BOOK_REQUEST = _require.FETCH_BOOK_REQUEST,\n    FETCH_BOOK_SUCCESS = _require.FETCH_BOOK_SUCCESS,\n    FETCH_BOOK_FAIL = _require.FETCH_BOOK_FAIL,\n    DELETE_BOOK_REQUEST = _require.DELETE_BOOK_REQUEST,\n    DELETE_BOOK_SUCCESS = _require.DELETE_BOOK_SUCCESS,\n    DELETE_BOOK_FAIL = _require.DELETE_BOOK_FAIL,\n    BOOK_UPDATE_REQUEST = _require.BOOK_UPDATE_REQUEST,\n    BOOK_UPDATE_SUCCESS = _require.BOOK_UPDATE_SUCCESS,\n    BOOK_UPDATE_FAIL = _require.BOOK_UPDATE_FAIL,\n    BOOK_DETAIL_REQUEST = _require.BOOK_DETAIL_REQUEST,\n    BOOK_DETAIL_SUCCESS = _require.BOOK_DETAIL_SUCCESS,\n    BOOK_DETAIL_FAIL = _require.BOOK_DETAIL_FAIL;\n\nvar createBookAction = function createBookAction(bookData) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch, getState) {\n      var userInfo, config, _yield$axios$post, data;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context.prev = 1;\n              dispatch({\n                type: CREATE_BOOK_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  'Content-Type': 'application/json'\n                }\n              }; // headers: {\n              //     \"Content-Type\": \"multipart/form-data\"\n              // }\n\n              _context.next = 6;\n              return axios.post('/book/auth', bookData, config);\n\n            case 6:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: CREATE_BOOK_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: CREATE_BOOK_FAIL,\n                error: _context.t0.response && _context.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; //Fetch all books\n\n\nvar fetchBooks = function fetchBooks() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch, getState) {\n      var userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context2.prev = 1;\n              dispatch({\n                type: FETCH_BOOK_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 6;\n              return axios.get('/book', config);\n\n            case 6:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: FETCH_BOOK_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: FETCH_BOOK_FAIL,\n                error: _context2.t0.response && _context2.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // delete book\n\n\nvar deleteBook = function deleteBook(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch, getState) {\n      var userInfo, config, _yield$axios$delete, data;\n\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context3.prev = 1;\n              dispatch({\n                type: DELETE_BOOK_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context3.next = 6;\n              return axios.delete(\"/book/auth/\".concat(id), config);\n\n            case 6:\n              _yield$axios$delete = _context3.sent;\n              data = _yield$axios$delete.data;\n              dispatch({\n                type: DELETE_BOOK_SUCCESS,\n                payload: data\n              });\n              dispatch({\n                type: FETCH_BOOK_SUCCESS\n              });\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: DELETE_BOOK_FAIL,\n                loading: false,\n                error: _context3.t0.response && _context3.t0.response.data.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 12]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; //Fetch a signle book\n\n\nvar fetchBook = function fetchBook(id, bookData) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch, getState) {\n      var config, _yield$axios$get2, data;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: BOOK_DETAIL_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  // authorization: `tiendat ${userInfo.token}`,\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context4.next = 5;\n              return axios.get(\"/book/auth/\".concat(id), bookData, config);\n\n            case 5:\n              _yield$axios$get2 = _context4.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: BOOK_DETAIL_SUCCESS,\n                payload: data\n              });\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: BOOK_DETAIL_FAIL,\n                error: _context4.t0.response && _context4.t0.response.data.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 10]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; //UPDATE BOOK\n\n\nvar updateBook = function updateBook(id, bookData) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch, getState) {\n      var userInfo, config, _yield$axios$put, data;\n\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // grab the user Token from store\n              userInfo = getState().userLogin.userInfo;\n              _context5.prev = 1;\n              dispatch({\n                type: BOOK_UPDATE_REQUEST,\n                loading: true\n              });\n              config = {\n                headers: {\n                  authorization: \"tiendat \".concat(userInfo.token),\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context5.next = 6;\n              return axios.put(\"/book/auth/\".concat(id), bookData, config);\n\n            case 6:\n              _yield$axios$put = _context5.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: BOOK_UPDATE_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: BOOK_UPDATE_FAIL,\n                loading: false,\n                error: _context5.t0.response && _context5.t0.response.data.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 11]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\n\nexport { createBookAction, fetchBooks, deleteBook, updateBook, fetchBook };","map":{"version":3,"names":["axios","require","CREATE_BOOK_REQUEST","CREATE_BOOK_SUCCESS","CREATE_BOOK_FAIL","FETCH_BOOK_REQUEST","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAIL","DELETE_BOOK_REQUEST","DELETE_BOOK_SUCCESS","DELETE_BOOK_FAIL","BOOK_UPDATE_REQUEST","BOOK_UPDATE_SUCCESS","BOOK_UPDATE_FAIL","BOOK_DETAIL_REQUEST","BOOK_DETAIL_SUCCESS","BOOK_DETAIL_FAIL","createBookAction","bookData","dispatch","getState","userInfo","userLogin","type","loading","config","headers","authorization","token","post","data","payload","error","response","message","fetchBooks","get","deleteBook","id","delete","fetchBook","updateBook","put"],"sources":["D:/DAChuyenNganh/Libraly-System/Libraly-System/Frontend/src/redux/actions/books/bookActions.js"],"sourcesContent":["import axios from 'axios';\r\nconst { CREATE_BOOK_REQUEST, CREATE_BOOK_SUCCESS, CREATE_BOOK_FAIL, FETCH_BOOK_REQUEST, FETCH_BOOK_SUCCESS, FETCH_BOOK_FAIL, DELETE_BOOK_REQUEST, DELETE_BOOK_SUCCESS, DELETE_BOOK_FAIL, BOOK_UPDATE_REQUEST, BOOK_UPDATE_SUCCESS, BOOK_UPDATE_FAIL, BOOK_DETAIL_REQUEST, BOOK_DETAIL_SUCCESS, BOOK_DETAIL_FAIL } = require(\"../actionsTypes\");\r\n\r\nconst createBookAction = bookData => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: CREATE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        }\r\n      };\r\n      // headers: {\r\n      //     \"Content-Type\": \"multipart/form-data\"\r\n      // }\r\n\r\n      const { data } = await axios.post('/book/auth', bookData, config);\r\n\r\n      dispatch({\r\n        type: CREATE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n//Fetch all books\r\n\r\nconst fetchBooks = () => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: FETCH_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const { data } = await axios.get('/book', config);\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n// delete book\r\nconst deleteBook = id => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: DELETE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.delete(`/book/auth/${id}`, config);\r\n      dispatch({\r\n        type: DELETE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_BOOK_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//Fetch a signle book\r\nconst fetchBook = (id, bookData) => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    // const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: BOOK_DETAIL_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          // authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/book/auth/${id}`, bookData, config);\r\n\r\n      dispatch({\r\n        type: BOOK_DETAIL_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_DETAIL_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//UPDATE BOOK\r\n\r\nconst updateBook = (id, bookData) => {\r\n  return async (dispatch, getState) => {\r\n    // grab the user Token from store\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: BOOK_UPDATE_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          authorization: `tiendat ${userInfo.token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.put(`/book/auth/${id}`, bookData, config);\r\n      dispatch({\r\n        type: BOOK_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_UPDATE_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\nexport { createBookAction, fetchBooks, deleteBook, updateBook, fetchBook };"],"mappings":"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"},"metadata":{},"sourceType":"module"}