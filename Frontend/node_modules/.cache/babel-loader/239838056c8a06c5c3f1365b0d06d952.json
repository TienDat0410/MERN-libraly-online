{"ast":null,"code":"import React, { createContext, useMemo, useRef, useState, useEffect, useCallback, Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { createPortal } from 'react-dom';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nvar Context = /*#__PURE__*/createContext();\nvar positions = {\n  TOP_LEFT: 'top left',\n  TOP_CENTER: 'top center',\n  TOP_RIGHT: 'top right',\n  MIDDLE_LEFT: 'middle left',\n  MIDDLE: 'middle',\n  MIDDLE_RIGHT: 'middle right',\n  BOTTOM_LEFT: 'bottom left',\n  BOTTOM_CENTER: 'bottom center',\n  BOTTOM_RIGHT: 'bottom right'\n};\nvar types = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  ERROR: 'error'\n};\nvar transitions = {\n  FADE: 'fade',\n  SCALE: 'scale'\n};\nvar getStyles = function getStyles(position) {\n  var initialStyles = {\n    left: 0,\n    position: 'fixed',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '100%',\n    pointerEvents: 'none'\n  };\n  switch (position) {\n    case positions.TOP_LEFT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        top: 0,\n        alignItems: 'flex-start'\n      });\n    case positions.TOP_CENTER:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        top: 0\n      });\n    case positions.TOP_RIGHT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        top: 0,\n        alignItems: 'flex-end'\n      });\n    case positions.MIDDLE_LEFT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        top: '50%',\n        alignItems: 'flex-start'\n      });\n    case positions.MIDDLE:\n      {\n        return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n          top: '50%'\n        });\n      }\n    case positions.MIDDLE_RIGHT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        top: '50%',\n        alignItems: 'flex-end'\n      });\n    case positions.BOTTOM_LEFT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        bottom: 0,\n        alignItems: 'flex-start'\n      });\n    case positions.BOTTOM_CENTER:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        bottom: 0\n      });\n    case positions.BOTTOM_RIGHT:\n      return _objectSpread2(_objectSpread2({}, initialStyles), {}, {\n        bottom: 0,\n        alignItems: 'flex-end'\n      });\n    default:\n      {\n        return initialStyles;\n      }\n  }\n};\nvar Wrapper = function Wrapper(_ref) {\n  var children = _ref.children,\n    _ref$options = _ref.options,\n    position = _ref$options.position,\n    containerStyle = _ref$options.containerStyle,\n    props = _objectWithoutProperties(_ref, [\"children\", \"options\"]);\n  var styles = useMemo(function () {\n    return getStyles(position);\n  }, [position]);\n  return children.length > 0 && /*#__PURE__*/React.createElement(\"div\", _extends({\n    style: _objectSpread2(_objectSpread2({}, styles), containerStyle)\n  }, props), children);\n};\nvar _defaultStyle, _transitionStyles;\nvar duration = 250;\nvar defaultStyle = (_defaultStyle = {}, _defineProperty(_defaultStyle, transitions.FADE, {\n  transition: \"opacity \".concat(duration, \"ms ease\"),\n  opacity: 0\n}), _defineProperty(_defaultStyle, transitions.SCALE, {\n  transform: 'scale(1)',\n  transition: \"all \".concat(duration, \"ms ease-in-out\")\n}), _defaultStyle);\nvar transitionStyles = (_transitionStyles = {}, _defineProperty(_transitionStyles, transitions.FADE, {\n  entering: {\n    opacity: 0\n  },\n  entered: {\n    opacity: 1\n  }\n}), _defineProperty(_transitionStyles, transitions.SCALE, {\n  entering: {\n    transform: 'scale(0)'\n  },\n  entered: {\n    transform: 'scale(1)'\n  },\n  exiting: {\n    transform: 'scale(0)'\n  },\n  exited: {\n    transform: 'scale(1)'\n  }\n}), _transitionStyles);\nvar Transtion = function Transtion(_ref) {\n  var children = _ref.children,\n    type = _ref.type,\n    props = _objectWithoutProperties(_ref, [\"children\", \"type\"]);\n  var ref = useRef(null);\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    nodeRef: ref\n  }, props, {\n    timeout: duration\n  }), function (state) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      style: _objectSpread2(_objectSpread2({}, defaultStyle[type]), transitionStyles[type][state])\n    }, children);\n  });\n};\nvar groupBy = function groupBy(array, fn) {\n  return array.reduce(function (result, item) {\n    var key = fn(item);\n    if (!result[key]) result[key] = [];\n    result[key].push(item);\n    return result;\n  }, {});\n};\nvar Provider = function Provider(_ref) {\n  var children = _ref.children,\n    offset = _ref.offset,\n    position = _ref.position,\n    timeout = _ref.timeout,\n    type = _ref.type,\n    transition = _ref.transition,\n    containerStyle = _ref.containerStyle,\n    AlertComponent = _ref.template,\n    Context = _ref.context,\n    props = _objectWithoutProperties(_ref, [\"children\", \"offset\", \"position\", \"timeout\", \"type\", \"transition\", \"containerStyle\", \"template\", \"context\"]);\n  var root = useRef(null);\n  var alertContext = useRef(null);\n  var timersId = useRef([]);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    alerts = _useState2[0],\n    setAlerts = _useState2[1];\n  useEffect(function () {\n    root.current = document.createElement('div');\n    root.current.id = '__react-alert__';\n    document.body.appendChild(root.current);\n    var timersIdRef = timersId.current;\n    return function () {\n      timersIdRef.forEach(clearTimeout);\n      if (root.current) document.body.removeChild(root.current);\n    };\n  }, []);\n  var remove = useCallback(function (alert) {\n    setAlerts(function (currentAlerts) {\n      var lengthBeforeRemove = currentAlerts.length;\n      var filteredAlerts = currentAlerts.filter(function (a) {\n        return a.id !== alert.id;\n      });\n      if (lengthBeforeRemove > filteredAlerts.length && alert.options.onClose) {\n        alert.options.onClose();\n      }\n      return filteredAlerts;\n    });\n  }, []);\n  var removeAll = useCallback(function () {\n    alertContext.current.alerts.forEach(remove);\n  }, [remove]);\n  var show = useCallback(function () {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var id = Math.random().toString(36).substr(2, 9);\n    var alertOptions = _objectSpread2({\n      position: options.position || position,\n      timeout: timeout,\n      type: type\n    }, options);\n    var alert = {\n      id: id,\n      message: message,\n      options: alertOptions\n    };\n    alert.close = function () {\n      return remove(alert);\n    };\n    if (alert.options.timeout) {\n      var timerId = setTimeout(function () {\n        remove(alert);\n        timersId.current.splice(timersId.current.indexOf(timerId), 1);\n      }, alert.options.timeout);\n      timersId.current.push(timerId);\n    }\n    setAlerts(function (state) {\n      return state.concat(alert);\n    });\n    if (alert.options.onOpen) alert.options.onOpen();\n    return alert;\n  }, [position, remove, timeout, type]);\n  var success = useCallback(function () {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.type = types.SUCCESS;\n    return show(message, options);\n  }, [show]);\n  var error = useCallback(function () {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.type = types.ERROR;\n    return show(message, options);\n  }, [show]);\n  var info = useCallback(function () {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.type = types.INFO;\n    return show(message, options);\n  }, [show]);\n  alertContext.current = {\n    alerts: alerts,\n    show: show,\n    remove: remove,\n    removeAll: removeAll,\n    success: success,\n    error: error,\n    info: info\n  };\n  var alertsByPosition = groupBy(alerts, function (alert) {\n    return alert.options.position;\n  });\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: alertContext\n  }, children, root.current && /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(Fragment, null, Object.keys(positions).map(function (key) {\n    var position = positions[key];\n    return /*#__PURE__*/React.createElement(TransitionGroup, _extends({\n      appear: true,\n      key: position,\n      options: {\n        position: position,\n        containerStyle: containerStyle\n      },\n      component: Wrapper\n    }, props), alertsByPosition[position] ? alertsByPosition[position].map(function (alert) {\n      return /*#__PURE__*/React.createElement(Transtion, {\n        type: transition,\n        key: alert.id\n      }, /*#__PURE__*/React.createElement(AlertComponent, _extends({\n        style: {\n          margin: offset,\n          pointerEvents: 'all'\n        }\n      }, alert)));\n    }) : null);\n  })), root.current));\n};\nProvider.propTypes = {\n  offset: PropTypes.string,\n  position: PropTypes.oneOf(Object.keys(positions).map(function (position) {\n    return positions[position];\n  })),\n  timeout: PropTypes.number,\n  type: PropTypes.oneOf(Object.keys(types).map(function (type) {\n    return types[type];\n  })),\n  transition: PropTypes.oneOf(Object.keys(transitions).map(function (transition) {\n    return transitions[transition];\n  })),\n  containerStyle: PropTypes.object,\n  template: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.elementType]).isRequired,\n  context: PropTypes.shape({\n    Provider: PropTypes.object,\n    Consumer: PropTypes.object\n  })\n};\nProvider.defaultProps = {\n  offset: '10px',\n  position: positions.TOP_CENTER,\n  timeout: 0,\n  type: types.INFO,\n  transition: transitions.FADE,\n  containerStyle: {\n    zIndex: 100\n  },\n  context: Context\n};\nvar useAlert = function useAlert(Context$1) {\n  var alertContext = useContext(Context$1 || Context);\n  var alert = useMemo(function () {\n    return alertContext.current;\n  }, [alertContext]);\n  return alert;\n};\nvar withAlert = function withAlert() {\n  var Context$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Context;\n  return function (WrappedComponent) {\n    var WithAlert = function WithAlert(props, forwardedRef) {\n      return /*#__PURE__*/React.createElement(Context$1.Consumer, null, function (alert) {\n        return /*#__PURE__*/React.createElement(WrappedComponent, _extends({\n          ref: forwardedRef\n        }, props, {\n          alert: alert.current\n        }));\n      });\n    };\n    WithAlert.displayName = \"WithAlert(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\");\n    return /*#__PURE__*/React.forwardRef(WithAlert);\n  };\n};\nexport { Provider, positions, transitions, types, useAlert, withAlert };","map":null,"metadata":{},"sourceType":"module"}